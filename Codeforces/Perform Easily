#include <bits/stdc++.h>
#include <time.h>
using namespace std;
#define int long long
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define pb push_back
#define ff first
#define ss second
#define rep(i,a,b) for(int i = a; i < b; i++)
#define repp(i,a,b) for(int i = a; i <= b; i++)
#define endl '\n'
#define all(v) v.begin(), v.end()
#define mod 1000000007
#define mod_in(a) bin(a, mod - 2)
#define fact(n) rep(i, 1, n+1) ft.pb((ft[i-1] * i) % mod)
#define ncr(n, r) (n >= r ? ((ft[n] * mod_in((ft[r] * ft[(n)-(r)]) % mod)) % mod) : 0LL)
#define pi 3.14159265358979323
#define INF 1e15
#define lb(v, a) lower_bound(v.begin(), v.end(), a)
#define ub(v, a) upper_bound(v.begin(), v.end(), a) 
#define deb(x) cerr<<#x<<" "<<x<<endl;  
 
//  Ordered Set
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
// using namespace __gnu_pbds;
// template<typename T>
// using ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;
// template<typename T>
// using ordered_multiset = tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;
// #define os_find(k) find_by_order(k)
// #define os_order(k) order_of_key(k)
// //(**FOR USING ORDERED SET CHANGE INT**)
 
 
int power(int x, int n){
    int res=1;
    while(n>0){
        if(n&1)
            res=res*x;
        x*=x;
        n>>=1;
    }
    return res;
}
 
int bin(int x, int n){
    int res=1; x%=mod;
    while(n){
        if(n&1) res=(res*x)%mod;
        x=(x*x)%mod;
        n>>=1;
    }
    return res;
}
 
bool prime(int n){
    if(n==3)return 1;
    repp(i,2,sqrt(n)){
        if(n%i==0)return 0;
    }
    return 1;
}
 
 
// vector<int> pr[1000001];
// int arr[1000001];
// void sieve(int n){ 
//     for(int p=2; p<=n; p++){ 
//         if(pr[p].size() == 0){ 
//             for(int i=2*p; i<=n; i += p){
//                 pr[i].pb(p);
//             }
//         } 
//     } 
// }  
// vector<int> ft;
 

void solve(){
    int n, key[6];
    rep(i,0,6) cin>>key[i]; cin>>n;
    int arr[n];
    rep(i,0,n) cin>>arr[i];
    vector<pair<int, int> > v;
    rep(i,0,n){
        rep(j,0,6) v.pb({arr[i] - key[j], i});
    }
    map<int, int> mp;
    sort(all(v));
    set<int> s;
    int l=0, r=0;
    rep(i,0,v.size()){
        s.insert(v[i].ss);
        mp[v[i].ss] ++;
        if(s.size() == n){
            r= i; break;
        }
    }
    int ind = r, ans = 1e18;
    // cout<<ind<<" "<<v[ind].ff<<" "<<v[0].ff<<endl;
    while(true){
        while(mp[v[l].ss > 1]){
            if(mp[v[l].ss] == 1)break;
            mp[v[l].ss] --;
            l++;
        }
        if(ans > v[ind].ff - v[l].ff){
            ans = v[ind].ff - v[l].ff;
        }
        ind ++;
        if(ind == v.size()) break;
        mp[v[ind].ss] ++;
    }
    cout<<ans<<endl;
}
 
signed main(){
    fast
    // #ifdef ONLINE_JUDGE
	// freopen("input.txt", "r", stdin);
    // freopen("output.txt", "w", stdout);
    // #endif
    int t=1;
    // cin>>t;
    while(t--) solve();
}
